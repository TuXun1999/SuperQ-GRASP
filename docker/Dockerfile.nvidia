# This image is adapted to build a docker image, where cuda 11.8 is supported
# The system within the container is Ubuntu 20.04
# The system is to equip with the development of programs to control SPOT, which are tested
# under Ubuntu 20.04 by us so far.
# However, the modules to build up the NeRF model (instant-NGP), estimate object pose (LoFTR), # predict grasp poses, etc., don't rely on this constraint of OS strictly

# Original author: Kaiyu Zheng
# Deprive the original program of the parts to install ROS-noetic, as is not needed

# Provide CUDA support
FROM nvidia/cuda:11.8.0-devel-ubuntu20.04
ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute,display

# Install Ubuntu 20.04
ENV UBUNTU_RELEASE=focal
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# do this to avoid hanging
ENV DEBIAN_FRONTEND=noninteractive

# Install software (including the tools to communicate with SPOT)
RUN apt-get clean
RUN apt-get update
RUN apt-get install -y --no-install-recommends apt-utils

RUN apt-get install -y sudo
RUN apt-get install -y python3-pip
RUN apt-get install -y net-tools
RUN apt-get install -y iputils-ping
RUN apt-get install -y git
RUN apt-get install -y python3-virtualenv
RUN apt-get install -y gdb
RUN apt-get install -y mlocate
RUN apt-get install -y openssh-client openssh-server

# create a user
ARG hostuser
ARG hostgroup
ARG hostuid
ARG hostgid

RUN echo Host user is $hostuser:$hostuser
RUN groupadd --gid $hostgid $hostgroup
RUN adduser --disabled-password --gecos '' --gid $hostgid --uid $hostuid $hostuser
RUN adduser $hostuser sudo
# Ensure sudo group users are not asked for a password when using sudo command
# by ammending sudoers file
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> \
/etc/sudoers

USER $hostuser
WORKDIR /home/$hostuser
ENV HOME=/home/$hostuser
RUN mkdir $HOME/repo

# Different shell color
RUN echo "export PS1='\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;33m\]\w\[\033[00m\]$ '" >> $HOME/.bashrc

# print some info on start
RUN echo "echo -e 'Welcome! You are now in a docker container ().'" >> $HOME/.bashrc
RUN echo "echo -e \"Docker ID: $(basename $(cat /proc/1/cpuset))\"" >> $HOME/.bashrc
CMD ["bash"]
